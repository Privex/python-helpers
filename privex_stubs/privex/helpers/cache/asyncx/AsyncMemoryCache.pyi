from privex.helpers.cache.asyncx.base import AsyncCacheAdapter as AsyncCacheAdapter
from privex.helpers.exceptions import CacheNotFound as CacheNotFound
from privex.helpers.settings import DEFAULT_CACHE_TIMEOUT as DEFAULT_CACHE_TIMEOUT
from typing import Any, Optional

log: Any

class AsyncMemoryCache(AsyncCacheAdapter):
    adapter_enter_reconnect: bool = ...
    adapter_exit_close: bool = ...
    async def get(self, key: str, default: Any=..., fail: bool=...) -> Any: ...
    async def set(self, key: str, value: Any, timeout: Optional[int]=...) -> Any: ...
    async def remove(self, *key: str) -> bool: ...
    async def update_timeout(self, key: str, timeout: int=...) -> Any: ...
