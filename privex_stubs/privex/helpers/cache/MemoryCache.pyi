from privex.helpers.cache.CacheAdapter import CacheAdapter as CacheAdapter
from privex.helpers.exceptions import CacheNotFound as CacheNotFound
from privex.helpers.settings import DEFAULT_CACHE_TIMEOUT as DEFAULT_CACHE_TIMEOUT
from typing import Any, Optional, Union

log: Any

class MemoryCache(CacheAdapter):
    def get(self, key: str, default: Any=..., fail: bool=...) -> Any: ...
    def set(self, key: str, value: Any, timeout: Optional[int]=...) -> Any: ...
    def get_or_set(self, key: str, value: Union[Any, callable], timeout: int=...) -> Any: ...
    def remove(self, *key: str) -> bool: ...
    def update_timeout(self, key: str, timeout: int=...) -> Any: ...
